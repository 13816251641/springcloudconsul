server:
  port: 81

sayportservice:
  ribbon:
    # 基于配置文件形式的针对单个服务的Ribbon负载均衡策略,经测试有用
    # NFLoadBalancerRuleClassName放在全局中无效!!!
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule
    #ReadTimeout也有效,能覆盖全局
    ReadTimeout: 4000




ribbon:
  MaxAutoRetriesNextServer: 0 #不允许调用另一个服务实例去重试
  MaxAutoRetries: 1 #服务挂了和服务超时都会重试
  ReadTimeout: 8000
  OkToRetryOnAllOperations: true

spring:
  application:
    name: consumer-81
  cloud:
    consul:
      host: 192.168.254.130 #consul地址
      port: 8500
      discovery:
        register: false #设置不需要注册到consul中
  datasource:
    url: jdbc:sqlserver://localhost:1433;DatabaseName=rabbitmq
    username: sa
    password: root
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver

feign:
  hystrix:
    enabled: true #springcloud默认不开启hystrix功能

hystrix:
  threadpool:
    sayportservice: #指定某一个feignclient的线程池大小,有效
      coreSize: 1
    default:
      coreSize: 5
      maxQueueSize: -1 #如果线程池的线程都在工作,则不排队直接拒绝
  command:
#    say:   我想指定feignclient中的某一个方法的超时时间,无效!!!
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 10000
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 1000 #hystrix的超时时间(ms)
      circuitBreaker:
        requestVolumeThreshold: 2 # 10 seconds内有多少个请求才开启断路器监控